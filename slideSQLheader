#!/bin/bash
#
# Description: Extract SQL-file column headers created by cellprofiler
#
# The MIT License (MIT)
# Copyright (c) 2014, UMC Utrecht, B.G.L. Nelissen
# 
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

#Variables
SCRIPTNAME=$(basename $0)
DESCRIPTIONSHORT="Extract SQL-file column names created by cellprofiler"
SUFFIX=".head"

#usage message
usage() {
cat <<- EOF
usage:  
$SCRIPTNAME [options] -f <filename>
Try $SCRIPTNAME --help for more information.
EOF
}

#Errors go to stderr
err() {
  echo "ERROR: $@" >&2
  usage
}

#help message
helpMessage() {
cat <<- EOF
${SCRIPTNAME}: ${DESCRIPTIONSHORT}

usage:
  $SCRIPTNAME [options] -f <filename>

options:
  -f, --file <filename>     "SQL_SETUP.SQL" file 
  
  [--add-head] <filename>   "file.csv" file 

  --help                    display this help
  -h                        display usage

examples:
  $SCRIPTNAME "SQL_SETUP.SQL"
  $SCRIPTNAME  --file="SQL_SETUP.SQL" --add-head="file.csv"

Extract SQL-file column names created by cellprofiler. These headers
can be added to a .csv file using the --add-head option, a copy
(.head.csv) will be created
The slideToolkit and all its tools are released under the terms of the MIT license
The slideToolkit (C) 2014, UMC Utrecht, B.G.L. Nelissen
Report issues at https://github.com/bglnelissen/slideToolkit/issues

EOF
}
#Menu
#Empty variables
FILE=""
ADDHEAD=""
#illegal option
illegalOption() {
cat <<- EOF
$SCRIPTNAME: illegal option $1
$(usage)
EOF
exit 1
}
#loop through options
while :
do
  case $1 in
    -h)
      usage
      exit 0 ;;
    --help | -\?)
      helpMessage
      exit 0 ;;
    -f | --file)
      FILE=$2
      shift 2 ;;
    --file=*)
      FILE=${1#*=}
      shift ;;
    --add-head)
      ADDHEAD=$2
      shift 2 ;;
    --add-head=*)
      ADDHEAD=${1#*=}
      shift ;;
    --) # End of all options
      shift
      break ;;
    -*)
      illegalOption "$1"
      shift ;;
    *)  # no more options. Stop while loop
      break ;;
  esac
done
#DEFAULTS
#set FILE
if [ "$FILE" != "" ]; then
  FILE="$FILE"
else
  FILE="$1"
fi

#requirements
checkRequirements() {
  if ! [[ -f "$FILE" ]] ; then
    err "No such file: $FILE">&2;
    exit 1
  fi
  if ! [[ -z "$ADDHEAD" ]]; then
    if ! [[ -f "$ADDHEAD" ]] ; then
      err "No such file: $ADDHEAD">&2;
      exit 1
    fi  
  fi
}

# actual program
programOutput(){
  # convert to 1 line
  # perl -p -e 'CREATE TABLE Per_Image' '))'; remove data types; clean spaces and comma's
  HEAD=$(cat "$FILE" | tr '\n' ' ' \
  | perl -p -e 's/.*CREATE\ TABLE\ Per_Image\ (\(.*\)PRIMARY\ KEY\ (ImageNumber)\ ).*/\1/' \
  | perl -p -e 's/float//g' | perl -p -e 's/INTEGER//g' | perl -p -e 's/TEXT//g' \
  | perl -p -e 's/\ \,\ /\,\ /g' | perl -p -e 's/\.*,\ $//' | perl -p -e 's/^\ //')
  # add head, yes -> do it, no -> echo head to stdout
  if ! [[ -z "$ADDHEAD" ]]; then
    echo "$(echo $HEAD; cat $ADDHEAD)" > "${ADDHEAD%.*}${SUFFIX}.${ADDHEAD##*.}"
  else
    echo "$HEAD"
  fi
}
#all check?
checkRequirements

#lets go!
programOutput