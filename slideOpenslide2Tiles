#!/bin/bash
#
# Description: Tiff2Tiles using openslide
# Copyright (C) 2014, B.G.L. Nelissen. All rights reserved.
#
################################################################################
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
# 
#   Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# 
#   Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
################################################################################
# Respect the Google Shell style guide.
# http://google-styleguide.googlecode.com/svn/trunk/shell.xml

# aperio magnifications: tiffinfo aperio.svs |grep -w AppMag| sed 's/.*\(AppMag\ =\ [0-9]\{1,2\}\).*/\1/'

# debug
DEBUG=false
debug(){
  if [[ $DEBUG==true ]];then
    echo "$@"
  fi
}

# set variables
FILE="$1"
# path variables
FILEFULL="$(echo $(cd $(dirname $FILE); pwd)/$(basename $FILE))" # full path $FULL
FILEPATH="${FILEFULL%.*}"           # full path, no extension
FOLDERPATH=$(dirname "$FILEFULL")   # folder path
BASENAME=$(basename "$FILEFULL")    # basename
FILENAME="${BASENAME%.*}"           # basename, no extension"
EXTENSION="${BASENAME##*.}"         # extension
SLIDE="$FILE[0]"
TILESWIDTH=2000
TILESHEIGHT=2000

# create tiles per row, measure dimentions of newly create image
width=$(identify -format "%w" "$SLIDE")
height=$(identify -format "%h" "$SLIDE")
dimensions=${width}x${height}
limit_w=$((($width / $TILESWIDTH)-1))
limit_h=$((($height / $TILESHEIGHT)-1))
debug "$(date)"
debug "Start creating tiles..."
debug "width      $width"
debug "height     $height"
debug "dimensions $dimensions"
debug "limit_w    $limit_w"
debug "limit_h    $limit_h"
for y in $(seq 0 $limit_h); do
  for x in $(seq 0 $limit_w); do
    # one tile
    TILE="${FILEPATH}.X${y}.Y${x}.tile.png"
    w=$((x * $TILESWIDTH))
    h=$((y * $TILESHEIGHT))
    # openslide-write-png [OPTION...] slide x y level width height output.png
    openslide-write-png "$FILEFULL" "$w" "$h" 0 "$TILESWIDTH" "$TILESHEIGHT" "$TILE"

    # find tissue using some magick
    if [ $(wc -c < $TILE ) -ge 100000 ]; then
      # more than 100000 bytes...
      VERBOSE=$( convert $TILE -colorspace HSL -verbose info: );
      RGBO=$( echo "$VERBOSE" | grep mean | awk '{print $2}' )
      RED=$( echo $RGBO | awk '{print $1}'  | cut -d. -f1 ); 
      GREEN=$( echo $RGBO | awk '{print $2}'| cut -d. -f1 ); 
      BLUE=$( echo $RGBO | awk '{print $3}' | cut -d. -f1 );
      BLUESD=$( echo "$VERBOSE" | grep 'standard deviation' | awk '{print $3}' | sed -n 3p | cut -d. -f1 )
    if [ $RED -ge 51 ] && [ $GREEN -ge 12 ]; then 
      TISSUE="tissue";
    elif [ $BLUESD -ge 6 ]; then  
      TISSUE="tissue"; 
    else
      TISSUE="empty"; 
    fi; 
  else 
    TISSUE="empty"; 
  fi;
  # rename file
  mv -v "$TILE" "${TILE%.*}.${TISSUE}.png"
done
done